#Database
databaseSQLiteUrl=jdbc:sqlite:data/sqlite.db
#blocked hosts sql
sqlCreateHostsTable=CREATE TABLE if not exists hosts(domain varchar(255) NOT NULL PRIMARY KEY, comment varchar(255) DEFAULT NULL,updated_at integer NOT NULL DEFAULT 0, status integer NOT NULL DEFAULT 1, category varchar(64) NOT NULL, CONSTRAINT fk_hosts_categories FOREIGN KEY (category) REFERENCES categories(id))
sqlInsertHost=Insert into hosts(domain,category,status,comment,updated_at) values (?,?,?,?,?)
sqlSelectHosts=Select * from hosts
sqlSelectHostsActive=Select * from Hosts where (status & 1) == 1
sqlSelectHostsByDomain=Select * from hosts where domain like ?
	#sqlSelectHostsByCategory=Select * from hosts where category = ?
	#sqlSelectHostsByComment=Select * from hosts where comment like '%?%'
sqlSelectHostsCount=Select count(domain) total from hosts where (status & 1) == 1
sqlUpdateHostToggleStatus=update hosts set status = ( ((select status from hosts where domain = ?) | 1) - ((select status from hosts where domain = ?) & 1)) where domain = ?
#custom hosts sql
sqlCreateCustomHostsTable=Create table if not exists customHosts( domain varchar(255) NOT NULL PRIMARY KEY, address varchar(255) NOT NULL, status integer NOT NULL default 1)
sqlInsertCustomHost=Insert into customHosts(domain,address,status) values (?,?,?)
sqlSelectCustomHosts=Select * from customHosts
sqlSelectCustomHostsActive=Select * from customHosts where (status & 1) == 1
sqlSelectCustomHostsByDomain=Select * from customHosts where domain = ?
sqlSelectCustomHostsByAddress=Select * from customHosts where address = ?
sqlSelectCustomHostsByDomainOrIp=Select * from customHosts where domain like ? OR address like ?
sqlUpdateCustomHostToggleStatus=update customHosts set status = ( ((select status from customHosts where domain = ?) | 1) - ((select status from customHosts where domain = ?) & 1)) where domain = ?
#configuration sql
sqlCreateConfigurationTable=Create table if not exists configurations(parameter varchar(64) NOT NULL PRIMARY KEY, value varchar(255) NOT NULL)
sqlSelectConfigurations=Select * from configurations
sqlSelectConfigurationByParameter=Select value from configurations where parameter = ?
sqlInsertConfiguration=Insert into configurations(parameter,value) values (?,?)
sqlSelectLastUpdateTime=Select value from configurations where parameter = 'lastUpdateTime'
sqlUpdateLastUpdateTime=Update configurations set value = ? where parameter = 'lastUpdateTime'
#IF EXISTS (SELECT * FROM configuration WHERE parameter = lastUpdateTime) UPDATE configuration SET value = ? ELSE INSERT INTO configuration (parameter,value) values ('lastUpdate',?)
#UI
statusBarColorOk=-fx-background-color:#7f7;
statusBarColorUpdate=-fx-background-color:#fc6;
statusBarColorError=-fx-background-color:#f77;
#
urlGetWithTime=http://uo237441.duckdns.org/api/hosts/?format=db&time=
urlApiHosts=https://uo237441.duckdns.org/api/hosts/
defaultBlockedHostAddress=0.0.0.0
# HOSTS FILE
hostsFilePathWindows=\\System32\\drivers\\etc\\hosts
hostsFilePathLinux=/etc/hosts
hostsFilePathMac=/etc/hosts
hostsFilePathSolaris=/etc/inet/hosts
hostsFileHeader=#Hosts file managed with ViHoMa\r\n#https://uo237441.duckdns.org\r\n#----------\r\n\r\n127.0.0.1 localhost\r\n\r\n# The following lines are desirable for IPv6 capable hosts\r\n# ::1 ip6-localhost ip6-loopback\r\n# fe00::0 ip6-localnet\r\n# ff00::0 ip6-mcastprefix\r\n# ff02::1 ip6-allnodes\r\n# ff02::2 ip6-allrouters
#ERRORS
parametersCannotBeNull=The parameters of this function cannot be null
